/* -*-c-*-
  Fingerprint AmigaOS AmiTCP/IP 4.3
  TSeq(Class=64K)
  T1(DF=N%W=1F0E%ACK=S++%Flags=AS%Ops=M)
  T2(Resp=N)
  T3(Resp=Y%DF=N%W=1F0E%ACK=O%Flags=A%Ops=)
  T4(DF=N%W=2000%ACK=O%Flags=R%Ops=)
  T5(DF=N%W=0%ACK=S++%Flags=AR%Ops=)
  T6(DF=N%W=0%ACK=O%Flags=R%Ops=)
  T7(DF=N%W=0%ACK=S%Flags=AR%Ops=)
  PU(DF=N%TOS=0%IPLEN=38%RIPTL=15C%RID=E%RIPCK=0%UCK=0%ULEN=134%DAT=E)
*/

id "AmigaOS";

tcp {
  incoming yes;
  outgoing no;
  max-window 32768;
}

tcp_isn {
  type fixed-inc 64000;
  initial-value random;
}

tcp_options {
  keep-unknown yes;
  keep-unused no;
  isolated-packets yes;
  code {
    copy(mss); /* only option supported ? */
  }
}

tcp_decoy {
  code {
    if (option(mss)) { /* nmap has mss on all of its pkts */
      set(df, 0);
      if (listen) {
	if (flags(syn&ece)) { /* nmap test 1 */
	  set(win, 7950);
	  set(ack, this + 1);
	  set(flags, ack|syn);
	  insert(mss, this+1);
	  reply;
	}
	if (flags(null)) /* nmap test 2 */
	  drop; 
	if (flags(syn&fin&urg&push)) { /* nmap test 3 */
	  set(win, 7950);
	  set(ack, 2);
	  set(flags, ack);
	  reply;
	}
	if (ack(0) && flags(ack) && !flags(syn|push|urg|rst)) { /* nmap test 4 */
	  set(win, 8192);
	  set(ack, 2);
	  set(flags, rst);
	  reply;
	}
      } else {
	set(win, 0);
	if (flags(syn) && !flags(ack)) { /* nmap test 5 */
	  set(ack, this + 1);
	  set(flags, ack|rst);
	  reply;
	}
	if (ack(0) && flags(ack) && !flags(syn|push|urg|rst)) { /* nmap test 6 */
	  set(ack, 2);
	  set(flags, rst);
	  reply;
	}
	if (flags(fin&push&urg)) { /* nmap test 7 */
	  set(ack, this);
	  set(flags, ack|rst);
	  reply;
	}
      }
    }
  }
}

udp_unreach {
  reply yes;
  df no;
  max-len 56;
  tos 0;
  
  mangle-original {
    ip-len 348;
    ip-id same;
    ip-csum zero;
    udp-len 308;
    udp-csum zero;
    udp-data same;
  }
}

