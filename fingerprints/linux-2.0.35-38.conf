/* -*-c-*-
   Fingerprint Linux 2.0.35-38
   TSeq(Class=TR)
   T1(DF=N%W=7FE0|7FF0|3FE0|3FF0|2200%ACK=S++%Flags=AS%Ops=ME|M)
   T2(Resp=N)
   T3(Resp=Y%DF=N%W=7FE0|7FF0|3FE0|3FF0|2200%ACK=S++%Flags=ASF%Ops=ME|M)
   T4(DF=N%W=0%ACK=O%Flags=R%Ops=)
   T5(DF=N%W=0%ACK=S++%Flags=AR%Ops=)
   T6(DF=N%W=0%ACK=O%Flags=R%Ops=)
   T7(DF=N%W=0%ACK=S%Flags=AR%Ops=)
   PU(DF=N%TOS=C0|A0|0%IPLEN=164%RIPTL=148%RID=E%RIPCK=E%UCK=E%ULEN=134%DAT=E)

   Contributed by Harley Anderson <warragul@selcon.com.au>.
*/

id "linux-2.0.35";

tcp {
  incoming yes;
  outgoing no;
  max-window 65536;
}

tcp_isn {
  type true-random;
}

tcp_options {
  keep-unknown yes;
  keep-unused no;
  isolated-packets yes;
  code {
    if (flags(syn)) {
      copy(mss);
      if (option(timestamp)) {
        if (option(sackOK)) {
          copy(sackOK);
          copy(timestamp);
        } else {
          copy(nop);
          copy(nop);
          copy(timestamp);
        }
      } else
        if (option(sackOK)) {
          copy(nop);
          copy(nop);
          copy(sackOK);
        }
      if (option(wscale)) {
        copy(nop);
        copy(wscale);
      }
    } else {
      if (option(timestamp)) {
        copy(nop);
        copy(nop);
        copy(timestamp);
      }
      if (option(sack)) {
        copy(nop);
        copy(nop);
        copy(sack);
      }
    }
  }
}

tcp_decoy {
  code {
    if (option(mss)) { /* nmap has mss on all of its pkts */
      if (listen) {
        if (flags(syn&ece)) { /* nmap test 1 */
	set(df,0);
	set(win,32736);
	set(ack,this+1);
	set(flags,ack|syn);
	insert(mss,this);
	reply;
	}
        if (flags(null)) /* nmap test 2 */
          drop;
        if (flags(syn&fin&urg&push)) { /* nmap test 3 */
        set(df,0);
        set(win,32736);
        set(ack,this+1);
        set(flags,ack|syn|fin);
        insert(mss,this);
	reply;
	}
        if (ack(0) && flags(ack) && !flags(syn|push|urg|rst)) {/* nmap test 4 */
          set(df, 0);
          set(win, 0);
          set(ack, 2);
          set(flags, rst);
          reply;
        }
      } else {
        set(df, 0);
        set(win, 0);
        if (flags(syn) && !flags(ack)) { /* nmap test 5 */
          set(ack, this + 1);
          set(flags, ack|rst);
          reply;
        }
        if (ack(0) && flags(ack) && !flags(syn|push|urg|rst)) { /* nmap test 6 */
          set(ack, 2);
          set(flags, rst);
          reply;
        }
        if (flags(fin&push&urg)) { /* nmap test 7 */
          set(ack, this);
          set(flags, ack|rst);
          reply;
        }
      }
    }
  }
}

udp_unreach {
  reply yes;
  df no;
  max-len 356;
  tos 192;

  mangle-original {
    ip-len 328;
    ip-id same;
    ip-csum same;
    udp-len 308;
    udp-csum same;
    udp-data same;
  }
}

